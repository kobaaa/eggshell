{:eggshell/file-type "eggshell spreadsheet", :eggshell/version "v1", :eggshell/graph {:nodeset #{:a59 :a115 :a223 :a50 :a134 :a25 :a48 :a131 :a225 :a16 :a211 :a175 :a90 :a23 :a88 :a213 :a179 :a200 :a161 :a2 :a125 :a114 :a227 :a160 :a91 :a83 :b2 :a186 :a232 :a132 :a158 :a238 :a86 :a143 :a112 :a106 :a150 :a107 :a116 :a224 :a117 :a113 :a74 :a85 :a109 :a139 :a47 :a220 :a163 :a170 :a19 :a194 :a249 :a167 :a96 :a164 :a231 :a53 :a121 :a95 :a56 :a197 :a229 :a120 :a75 :a43 :a30 :a147 :a78 :a149 :a3 :a240 :a1 :a243 :a219 :a101 :a168 :a199 :a119 :a180 :b1 :a111 :a212 :a247 :a100 :a14 :a13 :a191 :a108 :a39 :a130 :a216 :a46 :a165 :a193 :a136 :a18 :a57 :a228 :a156 :a135 :a67 :a183 :a27 :a239 :a172 :a142 :a80 :a81 :a192 :a138 :a205 :a217 :a208 :a204 :a246 :a103 :a76 :a8 :a248 :a118 :a33 :a52 :a202 :a145 :a10 :a29 :a218 :a129 :a128 :a24 :a6 :a176 :a154 :a63 :a102 :a230 :a210 :a123 :a190 :a0 :a58 :a237 :a60 :a32 :a20 :a174 :a206 :a157 :a92 :a62 :a122 :a144 :a148 :a221 :a153 :a162 :a34 :a36 :b4 :a51 :a45 :a26 :a110 :a141 :a233 :a184 :a245 :a182 :a93 :a214 :a235 :a146 :a226 :a37 :a38 :a177 :a242 :a40 :a201 :a5 :b3 :a209 :a178 :a61 :a79 :a241 :a12 :a203 :a137 :a187 :a140 :a185 :a54 :a11 :a72 :a84 :a69 :a222 :a151 :a171 :a152 :a22 :a70 :a159 :a207 :a89 :a236 :a21 :a244 :a64 :a71 :a181 :a31 :a87 :a82 :a68 :a133 :a189 :a66 :a49 :a98 :a7 :a77 :a250 :a126 :a105 :a104 :a65 :a188 :a55 :a35 :a28 :a127 :a215 :a169 :a15 :b5 :a155 :a41 :a73 :a173 :a195 :a196 :a94 :a9 :a234 :a17 :a99 :a4 :a44 :a42 :a166 :a124 :a198 :a97}, :adj {:a0 #{:a59 :a115 :a223 :a50 :a134 :a25 :a48 :a131 :a225 :a16 :a211 :a175 :a90 :a23 :a88 :a213 :a179 :a200 :a161 :a2 :a125 :a114 :a227 :a160 :a91 :a83 :a186 :a232 :a132 :a158 :a238 :a86 :a143 :a112 :a106 :a150 :a107 :a116 :a224 :a117 :a113 :a74 :a85 :a109 :a139 :a47 :a220 :a163 :a170 :a19 :a194 :a249 :a167 :a96 :a164 :a231 :a53 :a121 :a95 :a56 :a197 :a229 :a120 :a75 :a43 :a30 :a147 :a78 :a149 :a3 :a240 :a1 :a243 :a219 :a101 :a168 :a199 :a119 :a180 :a111 :a212 :a247 :a100 :a14 :a13 :a191 :a108 :a39 :a130 :a216 :a46 :a165 :a193 :a136 :a18 :a57 :a228 :a156 :a135 :a67 :a183 :a27 :a239 :a172 :a142 :a80 :a81 :a192 :a138 :a205 :a217 :a208 :a204 :a246 :a103 :a76 :a8 :a248 :a118 :a33 :a52 :a202 :a145 :a10 :a29 :a218 :a129 :a128 :a24 :a6 :a176 :a154 :a63 :a102 :a230 :a210 :a123 :a190 :a58 :a237 :a60 :a32 :a20 :a174 :a206 :a157 :a92 :a62 :a122 :a144 :a148 :a221 :a153 :a162 :a34 :a36 :a51 :a45 :a26 :a110 :a141 :a233 :a184 :a245 :a182 :a93 :a214 :a235 :a146 :a226 :a37 :a38 :a177 :a242 :a40 :a201 :a5 :a209 :a178 :a61 :a79 :a241 :a12 :a203 :a137 :a187 :a140 :a185 :a54 :a11 :a72 :a84 :a69 :a222 :a151 :a171 :a152 :a22 :a70 :a159 :a207 :a89 :a236 :a21 :a244 :a64 :a71 :a181 :a31 :a87 :a82 :a68 :a133 :a189 :a66 :a49 :a98 :a7 :a77 :a250 :a126 :a105 :a104 :a65 :a188 :a55 :a35 :a28 :a127 :a215 :a169 :a15 :a155 :a41 :a73 :a173 :a195 :a196 :a94 :a9 :a234 :a17 :a99 :a4 :a44 :a42 :a166 :a124 :a198 :a97}, :a1 #{:b1}, :a2 #{:b2}, :a3 #{:b3}, :a4 #{:b4}, :a5 #{:b5}}, :in {:a59 #{:a0}, :a115 #{:a0}, :a223 #{:a0}, :a50 #{:a0}, :a134 #{:a0}, :a25 #{:a0}, :a48 #{:a0}, :a131 #{:a0}, :a225 #{:a0}, :a16 #{:a0}, :a211 #{:a0}, :a175 #{:a0}, :a90 #{:a0}, :a23 #{:a0}, :a88 #{:a0}, :a213 #{:a0}, :a179 #{:a0}, :a200 #{:a0}, :a161 #{:a0}, :a2 #{:a0}, :a125 #{:a0}, :a114 #{:a0}, :a227 #{:a0}, :a160 #{:a0}, :a91 #{:a0}, :a83 #{:a0}, :b2 #{:a2}, :a186 #{:a0}, :a232 #{:a0}, :a132 #{:a0}, :a158 #{:a0}, :a238 #{:a0}, :a86 #{:a0}, :a143 #{:a0}, :a112 #{:a0}, :a106 #{:a0}, :a150 #{:a0}, :a107 #{:a0}, :a116 #{:a0}, :a224 #{:a0}, :a117 #{:a0}, :a113 #{:a0}, :a74 #{:a0}, :a85 #{:a0}, :a109 #{:a0}, :a139 #{:a0}, :a47 #{:a0}, :a220 #{:a0}, :a163 #{:a0}, :a170 #{:a0}, :a19 #{:a0}, :a194 #{:a0}, :a249 #{:a0}, :a167 #{:a0}, :a96 #{:a0}, :a164 #{:a0}, :a231 #{:a0}, :a53 #{:a0}, :a121 #{:a0}, :a95 #{:a0}, :a56 #{:a0}, :a197 #{:a0}, :a229 #{:a0}, :a120 #{:a0}, :a75 #{:a0}, :a43 #{:a0}, :a30 #{:a0}, :a147 #{:a0}, :a78 #{:a0}, :a149 #{:a0}, :a3 #{:a0}, :a240 #{:a0}, :a1 #{:a0}, :a243 #{:a0}, :a219 #{:a0}, :a101 #{:a0}, :a168 #{:a0}, :a199 #{:a0}, :a119 #{:a0}, :a180 #{:a0}, :b1 #{:a1}, :a111 #{:a0}, :a212 #{:a0}, :a247 #{:a0}, :a100 #{:a0}, :a14 #{:a0}, :a13 #{:a0}, :a191 #{:a0}, :a108 #{:a0}, :a39 #{:a0}, :a130 #{:a0}, :a216 #{:a0}, :a46 #{:a0}, :a165 #{:a0}, :a193 #{:a0}, :a136 #{:a0}, :a18 #{:a0}, :a57 #{:a0}, :a228 #{:a0}, :a156 #{:a0}, :a135 #{:a0}, :a67 #{:a0}, :a183 #{:a0}, :a27 #{:a0}, :a239 #{:a0}, :a172 #{:a0}, :a142 #{:a0}, :a80 #{:a0}, :a81 #{:a0}, :a192 #{:a0}, :a138 #{:a0}, :a205 #{:a0}, :a217 #{:a0}, :a208 #{:a0}, :a204 #{:a0}, :a246 #{:a0}, :a103 #{:a0}, :a76 #{:a0}, :a8 #{:a0}, :a248 #{:a0}, :a118 #{:a0}, :a33 #{:a0}, :a52 #{:a0}, :a202 #{:a0}, :a145 #{:a0}, :a10 #{:a0}, :a29 #{:a0}, :a218 #{:a0}, :a129 #{:a0}, :a128 #{:a0}, :a24 #{:a0}, :a6 #{:a0}, :a176 #{:a0}, :a154 #{:a0}, :a63 #{:a0}, :a102 #{:a0}, :a230 #{:a0}, :a210 #{:a0}, :a123 #{:a0}, :a190 #{:a0}, :a58 #{:a0}, :a237 #{:a0}, :a60 #{:a0}, :a32 #{:a0}, :a20 #{:a0}, :a174 #{:a0}, :a206 #{:a0}, :a157 #{:a0}, :a92 #{:a0}, :a62 #{:a0}, :a122 #{:a0}, :a144 #{:a0}, :a148 #{:a0}, :a221 #{:a0}, :a153 #{:a0}, :a162 #{:a0}, :a34 #{:a0}, :a36 #{:a0}, :b4 #{:a4}, :a51 #{:a0}, :a45 #{:a0}, :a26 #{:a0}, :a110 #{:a0}, :a141 #{:a0}, :a233 #{:a0}, :a184 #{:a0}, :a245 #{:a0}, :a182 #{:a0}, :a93 #{:a0}, :a214 #{:a0}, :a235 #{:a0}, :a146 #{:a0}, :a226 #{:a0}, :a37 #{:a0}, :a38 #{:a0}, :a177 #{:a0}, :a242 #{:a0}, :a40 #{:a0}, :a201 #{:a0}, :a5 #{:a0}, :b3 #{:a3}, :a209 #{:a0}, :a178 #{:a0}, :a61 #{:a0}, :a79 #{:a0}, :a241 #{:a0}, :a12 #{:a0}, :a203 #{:a0}, :a137 #{:a0}, :a187 #{:a0}, :a140 #{:a0}, :a185 #{:a0}, :a54 #{:a0}, :a11 #{:a0}, :a72 #{:a0}, :a84 #{:a0}, :a69 #{:a0}, :a222 #{:a0}, :a151 #{:a0}, :a171 #{:a0}, :a152 #{:a0}, :a22 #{:a0}, :a70 #{:a0}, :a159 #{:a0}, :a207 #{:a0}, :a89 #{:a0}, :a236 #{:a0}, :a21 #{:a0}, :a244 #{:a0}, :a64 #{:a0}, :a71 #{:a0}, :a181 #{:a0}, :a31 #{:a0}, :a87 #{:a0}, :a82 #{:a0}, :a68 #{:a0}, :a133 #{:a0}, :a189 #{:a0}, :a66 #{:a0}, :a49 #{:a0}, :a98 #{:a0}, :a7 #{:a0}, :a77 #{:a0}, :a250 #{:a0}, :a126 #{:a0}, :a105 #{:a0}, :a104 #{:a0}, :a65 #{:a0}, :a188 #{:a0}, :a55 #{:a0}, :a35 #{:a0}, :a28 #{:a0}, :a127 #{:a0}, :a215 #{:a0}, :a169 #{:a0}, :a15 #{:a0}, :b5 #{:a5}, :a155 #{:a0}, :a41 #{:a0}, :a73 #{:a0}, :a173 #{:a0}, :a195 #{:a0}, :a196 #{:a0}, :a94 #{:a0}, :a9 #{:a0}, :a234 #{:a0}, :a17 #{:a0}, :a99 #{:a0}, :a4 #{:a0}, :a44 #{:a0}, :a42 #{:a0}, :a166 #{:a0}, :a124 #{:a0}, :a198 #{:a0}, :a97 #{:a0}}, :attrs {:a59 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 58)), :eggshell/raw-code "(nth a0 58)"}, :a115 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 114)), :eggshell/raw-code "(nth a0 114)"}, :a223 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 222)), :eggshell/raw-code "(nth a0 222)"}, :a50 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 49)), :eggshell/raw-code "(nth a0 49)"}, :a134 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 133)), :eggshell/raw-code "(nth a0 133)"}, :a25 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 24)), :eggshell/raw-code "(nth a0 24)"}, :a48 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 47)), :eggshell/raw-code "(nth a0 47)"}, :a131 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 130)), :eggshell/raw-code "(nth a0 130)"}, :a225 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 224)), :eggshell/raw-code "(nth a0 224)"}, :a16 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 15)), :eggshell/raw-code "(nth a0 15)"}, :a211 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 210)), :eggshell/raw-code "(nth a0 210)"}, :a175 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 174)), :eggshell/raw-code "(nth a0 174)"}, :a90 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 89)), :eggshell/raw-code "(nth a0 89)"}, :a23 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 22)), :eggshell/raw-code "(nth a0 22)"}, :a88 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 87)), :eggshell/raw-code "(nth a0 87)"}, :a213 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 212)), :eggshell/raw-code "(nth a0 212)"}, :a179 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 178)), :eggshell/raw-code "(nth a0 178)"}, :a200 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 199)), :eggshell/raw-code "(nth a0 199)"}, :a161 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 160)), :eggshell/raw-code "(nth a0 160)"}, :a2 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 1)), :eggshell/raw-code "(nth a0 1)"}, :a125 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 124)), :eggshell/raw-code "(nth a0 124)"}, :a114 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 113)), :eggshell/raw-code "(nth a0 113)"}, :a227 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 226)), :eggshell/raw-code "(nth a0 226)"}, :a160 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 159)), :eggshell/raw-code "(nth a0 159)"}, :a91 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 90)), :eggshell/raw-code "(nth a0 90)"}, :a83 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 82)), :eggshell/raw-code "(nth a0 82)"}, :b2 {:eggshell/code (clojure.core/fn [cells] (eggshell.api.img/load (clojure.lang.RT/get cells :a2))), :eggshell/raw-code "(img/load a2)"}, :a186 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 185)), :eggshell/raw-code "(nth a0 185)"}, :a232 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 231)), :eggshell/raw-code "(nth a0 231)"}, :a132 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 131)), :eggshell/raw-code "(nth a0 131)"}, :a158 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 157)), :eggshell/raw-code "(nth a0 157)"}, :a238 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 237)), :eggshell/raw-code "(nth a0 237)"}, :a86 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 85)), :eggshell/raw-code "(nth a0 85)"}, :a143 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 142)), :eggshell/raw-code "(nth a0 142)"}, :a112 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 111)), :eggshell/raw-code "(nth a0 111)"}, :a106 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 105)), :eggshell/raw-code "(nth a0 105)"}, :a150 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 149)), :eggshell/raw-code "(nth a0 149)"}, :a107 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 106)), :eggshell/raw-code "(nth a0 106)"}, :a116 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 115)), :eggshell/raw-code "(nth a0 115)"}, :a224 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 223)), :eggshell/raw-code "(nth a0 223)"}, :a117 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 116)), :eggshell/raw-code "(nth a0 116)"}, :a113 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 112)), :eggshell/raw-code "(nth a0 112)"}, :a74 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 73)), :eggshell/raw-code "(nth a0 73)"}, :a85 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 84)), :eggshell/raw-code "(nth a0 84)"}, :a109 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 108)), :eggshell/raw-code "(nth a0 108)"}, :a139 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 138)), :eggshell/raw-code "(nth a0 138)"}, :a47 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 46)), :eggshell/raw-code "(nth a0 46)"}, :a220 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 219)), :eggshell/raw-code "(nth a0 219)"}, :a163 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 162)), :eggshell/raw-code "(nth a0 162)"}, :a170 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 169)), :eggshell/raw-code "(nth a0 169)"}, :a19 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 18)), :eggshell/raw-code "(nth a0 18)"}, :a194 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 193)), :eggshell/raw-code "(nth a0 193)"}, :a249 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 248)), :eggshell/raw-code "(nth a0 248)"}, :a167 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 166)), :eggshell/raw-code "(nth a0 166)"}, :a96 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 95)), :eggshell/raw-code "(nth a0 95)"}, :a164 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 163)), :eggshell/raw-code "(nth a0 163)"}, :a231 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 230)), :eggshell/raw-code "(nth a0 230)"}, :a53 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 52)), :eggshell/raw-code "(nth a0 52)"}, :a121 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 120)), :eggshell/raw-code "(nth a0 120)"}, :a95 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 94)), :eggshell/raw-code "(nth a0 94)"}, :a56 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 55)), :eggshell/raw-code "(nth a0 55)"}, :a197 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 196)), :eggshell/raw-code "(nth a0 196)"}, :a229 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 228)), :eggshell/raw-code "(nth a0 228)"}, :a120 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 119)), :eggshell/raw-code "(nth a0 119)"}, :a75 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 74)), :eggshell/raw-code "(nth a0 74)"}, :a43 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 42)), :eggshell/raw-code "(nth a0 42)"}, :a30 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 29)), :eggshell/raw-code "(nth a0 29)"}, :a147 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 146)), :eggshell/raw-code "(nth a0 146)"}, :a78 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 77)), :eggshell/raw-code "(nth a0 77)"}, :a149 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 148)), :eggshell/raw-code "(nth a0 148)"}, :a3 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 2)), :eggshell/raw-code "(nth a0 2)"}, :a240 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 239)), :eggshell/raw-code "(nth a0 239)"}, :a1 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 0)), :eggshell/raw-code "(nth a0 0)"}, :a243 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 242)), :eggshell/raw-code "(nth a0 242)"}, :a219 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 218)), :eggshell/raw-code "(nth a0 218)"}, :a101 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 100)), :eggshell/raw-code "(nth a0 100)"}, :a168 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 167)), :eggshell/raw-code "(nth a0 167)"}, :a199 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 198)), :eggshell/raw-code "(nth a0 198)"}, :a119 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 118)), :eggshell/raw-code "(nth a0 118)"}, :a180 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 179)), :eggshell/raw-code "(nth a0 179)"}, :b1 {:eggshell/code (clojure.core/fn [cells] (eggshell.api.img/load (clojure.lang.RT/get cells :a1))), :eggshell/raw-code "(img/load a1)"}, :a111 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 110)), :eggshell/raw-code "(nth a0 110)"}, :a212 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 211)), :eggshell/raw-code "(nth a0 211)"}, :a247 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 246)), :eggshell/raw-code "(nth a0 246)"}, :a100 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 99)), :eggshell/raw-code "(nth a0 99)"}, :a14 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 13)), :eggshell/raw-code "(nth a0 13)"}, :a13 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 12)), :eggshell/raw-code "(nth a0 12)"}, :a191 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 190)), :eggshell/raw-code "(nth a0 190)"}, :a108 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 107)), :eggshell/raw-code "(nth a0 107)"}, :a39 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 38)), :eggshell/raw-code "(nth a0 38)"}, :a130 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 129)), :eggshell/raw-code "(nth a0 129)"}, :a216 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 215)), :eggshell/raw-code "(nth a0 215)"}, :a46 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 45)), :eggshell/raw-code "(nth a0 45)"}, :a165 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 164)), :eggshell/raw-code "(nth a0 164)"}, :a193 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 192)), :eggshell/raw-code "(nth a0 192)"}, :a136 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 135)), :eggshell/raw-code "(nth a0 135)"}, :a18 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 17)), :eggshell/raw-code "(nth a0 17)"}, :a57 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 56)), :eggshell/raw-code "(nth a0 56)"}, :a228 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 227)), :eggshell/raw-code "(nth a0 227)"}, :a156 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 155)), :eggshell/raw-code "(nth a0 155)"}, :a135 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 134)), :eggshell/raw-code "(nth a0 134)"}, :a67 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 66)), :eggshell/raw-code "(nth a0 66)"}, :a183 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 182)), :eggshell/raw-code "(nth a0 182)"}, :a27 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 26)), :eggshell/raw-code "(nth a0 26)"}, :a239 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 238)), :eggshell/raw-code "(nth a0 238)"}, :a172 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 171)), :eggshell/raw-code "(nth a0 171)"}, :a142 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 141)), :eggshell/raw-code "(nth a0 141)"}, :a80 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 79)), :eggshell/raw-code "(nth a0 79)"}, :a81 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 80)), :eggshell/raw-code "(nth a0 80)"}, :a192 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 191)), :eggshell/raw-code "(nth a0 191)"}, :a138 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 137)), :eggshell/raw-code "(nth a0 137)"}, :a205 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 204)), :eggshell/raw-code "(nth a0 204)"}, :a217 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 216)), :eggshell/raw-code "(nth a0 216)"}, :a208 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 207)), :eggshell/raw-code "(nth a0 207)"}, :a204 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 203)), :eggshell/raw-code "(nth a0 203)"}, :a246 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 245)), :eggshell/raw-code "(nth a0 245)"}, :a103 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 102)), :eggshell/raw-code "(nth a0 102)"}, :a76 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 75)), :eggshell/raw-code "(nth a0 75)"}, :a8 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 7)), :eggshell/raw-code "(nth a0 7)"}, :a248 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 247)), :eggshell/raw-code "(nth a0 247)"}, :a118 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 117)), :eggshell/raw-code "(nth a0 117)"}, :a33 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 32)), :eggshell/raw-code "(nth a0 32)"}, :a52 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 51)), :eggshell/raw-code "(nth a0 51)"}, :a202 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 201)), :eggshell/raw-code "(nth a0 201)"}, :a145 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 144)), :eggshell/raw-code "(nth a0 144)"}, :a10 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 9)), :eggshell/raw-code "(nth a0 9)"}, :a29 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 28)), :eggshell/raw-code "(nth a0 28)"}, :a218 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 217)), :eggshell/raw-code "(nth a0 217)"}, :a129 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 128)), :eggshell/raw-code "(nth a0 128)"}, :a128 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 127)), :eggshell/raw-code "(nth a0 127)"}, :a24 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 23)), :eggshell/raw-code "(nth a0 23)"}, :a6 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 5)), :eggshell/raw-code "(nth a0 5)"}, :a176 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 175)), :eggshell/raw-code "(nth a0 175)"}, :a154 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 153)), :eggshell/raw-code "(nth a0 153)"}, :a63 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 62)), :eggshell/raw-code "(nth a0 62)"}, :a102 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 101)), :eggshell/raw-code "(nth a0 101)"}, :a230 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 229)), :eggshell/raw-code "(nth a0 229)"}, :a210 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 209)), :eggshell/raw-code "(nth a0 209)"}, :a123 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 122)), :eggshell/raw-code "(nth a0 122)"}, :a190 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 189)), :eggshell/raw-code "(nth a0 189)"}, :a0 {:eggshell/code (clojure.core/fn [cells] (map (fn* ([target31325] (.getAbsolutePath target31325))) (me.raynes.fs/list-dir "/Users/sideris/Downloads/icons/png/"))), :eggshell/raw-code "(map (memfn getAbsolutePath) (fs/list-dir \"/Users/sideris/Downloads/icons/png/\"))"}, :a58 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 57)), :eggshell/raw-code "(nth a0 57)"}, :a237 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 236)), :eggshell/raw-code "(nth a0 236)"}, :a60 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 59)), :eggshell/raw-code "(nth a0 59)"}, :a32 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 31)), :eggshell/raw-code "(nth a0 31)"}, :a20 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 19)), :eggshell/raw-code "(nth a0 19)"}, :a174 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 173)), :eggshell/raw-code "(nth a0 173)"}, :a206 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 205)), :eggshell/raw-code "(nth a0 205)"}, :a157 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 156)), :eggshell/raw-code "(nth a0 156)"}, :a92 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 91)), :eggshell/raw-code "(nth a0 91)"}, :a62 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 61)), :eggshell/raw-code "(nth a0 61)"}, :a122 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 121)), :eggshell/raw-code "(nth a0 121)"}, :a144 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 143)), :eggshell/raw-code "(nth a0 143)"}, :a148 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 147)), :eggshell/raw-code "(nth a0 147)"}, :a221 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 220)), :eggshell/raw-code "(nth a0 220)"}, :a153 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 152)), :eggshell/raw-code "(nth a0 152)"}, :a162 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 161)), :eggshell/raw-code "(nth a0 161)"}, :a34 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 33)), :eggshell/raw-code "(nth a0 33)"}, :a36 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 35)), :eggshell/raw-code "(nth a0 35)"}, :b4 {:eggshell/code (clojure.core/fn [cells] (eggshell.api.img/load (clojure.lang.RT/get cells :a4))), :eggshell/raw-code "(img/load a4)"}, :a51 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 50)), :eggshell/raw-code "(nth a0 50)"}, :a45 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 44)), :eggshell/raw-code "(nth a0 44)"}, :a26 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 25)), :eggshell/raw-code "(nth a0 25)"}, :a110 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 109)), :eggshell/raw-code "(nth a0 109)"}, :a141 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 140)), :eggshell/raw-code "(nth a0 140)"}, :a233 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 232)), :eggshell/raw-code "(nth a0 232)"}, :a184 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 183)), :eggshell/raw-code "(nth a0 183)"}, :a245 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 244)), :eggshell/raw-code "(nth a0 244)"}, :a182 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 181)), :eggshell/raw-code "(nth a0 181)"}, :a93 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 92)), :eggshell/raw-code "(nth a0 92)"}, :a214 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 213)), :eggshell/raw-code "(nth a0 213)"}, :a235 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 234)), :eggshell/raw-code "(nth a0 234)"}, :a146 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 145)), :eggshell/raw-code "(nth a0 145)"}, :a226 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 225)), :eggshell/raw-code "(nth a0 225)"}, :a37 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 36)), :eggshell/raw-code "(nth a0 36)"}, :a38 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 37)), :eggshell/raw-code "(nth a0 37)"}, :a177 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 176)), :eggshell/raw-code "(nth a0 176)"}, :a242 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 241)), :eggshell/raw-code "(nth a0 241)"}, :a40 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 39)), :eggshell/raw-code "(nth a0 39)"}, :a201 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 200)), :eggshell/raw-code "(nth a0 200)"}, :a5 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 4)), :eggshell/raw-code "(nth a0 4)"}, :b3 {:eggshell/code (clojure.core/fn [cells] (eggshell.api.img/load (clojure.lang.RT/get cells :a3))), :eggshell/raw-code "(img/load a3)"}, :a209 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 208)), :eggshell/raw-code "(nth a0 208)"}, :a178 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 177)), :eggshell/raw-code "(nth a0 177)"}, :a61 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 60)), :eggshell/raw-code "(nth a0 60)"}, :a79 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 78)), :eggshell/raw-code "(nth a0 78)"}, :a241 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 240)), :eggshell/raw-code "(nth a0 240)"}, :a12 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 11)), :eggshell/raw-code "(nth a0 11)"}, :a203 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 202)), :eggshell/raw-code "(nth a0 202)"}, :a137 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 136)), :eggshell/raw-code "(nth a0 136)"}, :a187 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 186)), :eggshell/raw-code "(nth a0 186)"}, :a140 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 139)), :eggshell/raw-code "(nth a0 139)"}, :a185 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 184)), :eggshell/raw-code "(nth a0 184)"}, :a54 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 53)), :eggshell/raw-code "(nth a0 53)"}, :a11 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 10)), :eggshell/raw-code "(nth a0 10)"}, :a72 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 71)), :eggshell/raw-code "(nth a0 71)"}, :a84 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 83)), :eggshell/raw-code "(nth a0 83)"}, :a69 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 68)), :eggshell/raw-code "(nth a0 68)"}, :a222 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 221)), :eggshell/raw-code "(nth a0 221)"}, :a151 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 150)), :eggshell/raw-code "(nth a0 150)"}, :a171 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 170)), :eggshell/raw-code "(nth a0 170)"}, :a152 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 151)), :eggshell/raw-code "(nth a0 151)"}, :a22 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 21)), :eggshell/raw-code "(nth a0 21)"}, :a70 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 69)), :eggshell/raw-code "(nth a0 69)"}, :a159 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 158)), :eggshell/raw-code "(nth a0 158)"}, :a207 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 206)), :eggshell/raw-code "(nth a0 206)"}, :a89 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 88)), :eggshell/raw-code "(nth a0 88)"}, :a236 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 235)), :eggshell/raw-code "(nth a0 235)"}, :a21 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 20)), :eggshell/raw-code "(nth a0 20)"}, :a244 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 243)), :eggshell/raw-code "(nth a0 243)"}, :a64 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 63)), :eggshell/raw-code "(nth a0 63)"}, :a71 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 70)), :eggshell/raw-code "(nth a0 70)"}, :a181 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 180)), :eggshell/raw-code "(nth a0 180)"}, :a31 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 30)), :eggshell/raw-code "(nth a0 30)"}, :a87 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 86)), :eggshell/raw-code "(nth a0 86)"}, :a82 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 81)), :eggshell/raw-code "(nth a0 81)"}, :a68 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 67)), :eggshell/raw-code "(nth a0 67)"}, :a133 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 132)), :eggshell/raw-code "(nth a0 132)"}, :a189 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 188)), :eggshell/raw-code "(nth a0 188)"}, :a66 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 65)), :eggshell/raw-code "(nth a0 65)"}, :a49 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 48)), :eggshell/raw-code "(nth a0 48)"}, :a98 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 97)), :eggshell/raw-code "(nth a0 97)"}, :a7 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 6)), :eggshell/raw-code "(nth a0 6)"}, :a77 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 76)), :eggshell/raw-code "(nth a0 76)"}, :a250 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 249)), :eggshell/raw-code "(nth a0 249)"}, :a126 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 125)), :eggshell/raw-code "(nth a0 125)"}, :a105 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 104)), :eggshell/raw-code "(nth a0 104)"}, :a104 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 103)), :eggshell/raw-code "(nth a0 103)"}, :a65 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 64)), :eggshell/raw-code "(nth a0 64)"}, :a188 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 187)), :eggshell/raw-code "(nth a0 187)"}, :a55 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 54)), :eggshell/raw-code "(nth a0 54)"}, :a35 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 34)), :eggshell/raw-code "(nth a0 34)"}, :a28 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 27)), :eggshell/raw-code "(nth a0 27)"}, :a127 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 126)), :eggshell/raw-code "(nth a0 126)"}, :a215 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 214)), :eggshell/raw-code "(nth a0 214)"}, :a169 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 168)), :eggshell/raw-code "(nth a0 168)"}, :a15 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 14)), :eggshell/raw-code "(nth a0 14)"}, :b5 {:eggshell/code (clojure.core/fn [cells] (eggshell.api.img/load (clojure.lang.RT/get cells :a5))), :eggshell/raw-code "(img/load a5)"}, :a155 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 154)), :eggshell/raw-code "(nth a0 154)"}, :a41 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 40)), :eggshell/raw-code "(nth a0 40)"}, :a73 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 72)), :eggshell/raw-code "(nth a0 72)"}, :a173 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 172)), :eggshell/raw-code "(nth a0 172)"}, :a195 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 194)), :eggshell/raw-code "(nth a0 194)"}, :a196 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 195)), :eggshell/raw-code "(nth a0 195)"}, :a94 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 93)), :eggshell/raw-code "(nth a0 93)"}, :a9 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 8)), :eggshell/raw-code "(nth a0 8)"}, :a234 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 233)), :eggshell/raw-code "(nth a0 233)"}, :a17 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 16)), :eggshell/raw-code "(nth a0 16)"}, :a99 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 98)), :eggshell/raw-code "(nth a0 98)"}, :a4 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 3)), :eggshell/raw-code "(nth a0 3)"}, :a44 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 43)), :eggshell/raw-code "(nth a0 43)"}, :a42 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 41)), :eggshell/raw-code "(nth a0 41)"}, :a166 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 165)), :eggshell/raw-code "(nth a0 165)"}, :a124 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 123)), :eggshell/raw-code "(nth a0 123)"}, :a198 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 197)), :eggshell/raw-code "(nth a0 197)"}, :a97 {:eggshell/code (clojure.core/fn [cells] (clojure.lang.RT/nth (clojure.lang.RT/get cells :a0) 96)), :eggshell/raw-code "(nth a0 96)"}}}, :eggshell/deps "{}", :eggshell/aliases "egg  eggshell.api\nmath eggshell.api.math\nimg  eggshell.api.img\nstr  clojure.string\nset  clojure.set\nio   clojure.java.io\nfs   me.raynes.fs", :eggshell/max-row 250, :eggshell/max-col 1, :eggshell/col-widths {1 60, 0 112}, :eggshell/row-heights {0 20, 65 20, 70 20, 62 20, 74 20, 7 20, 59 20, 86 20, 20 20, 72 20, 58 20, 60 20, 27 20, 1 27, 69 20, 24 20, 55 20, 85 20, 39 20, 88 20, 46 20, 4 27, 77 20, 95 20, 54 20, 92 20, 15 20, 48 20, 50 20, 75 20, 99 20, 21 20, 31 20, 32 20, 40 20, 91 20, 56 20, 33 20, 13 20, 22 20, 90 20, 36 20, 41 20, 89 20, 43 20, 61 20, 29 20, 44 20, 93 20, 6 20, 28 20, 64 20, 51 20, 25 20, 34 20, 17 20, 3 27, 12 20, 2 27, 66 20, 23 20, 47 20, 35 20, 82 20, 76 20, 97 20, 19 20, 57 20, 68 20, 11 20, 9 20, 5 27, 83 20, 14 20, 45 20, 53 20, 78 20, 26 20, 16 20, 81 20, 79 20, 38 20, 98 20, 87 20, 30 20, 73 20, 96 20, 10 20, 18 20, 52 20, 67 20, 71 20, 42 20, 80 20, 37 20, 63 20, 94 20, 8 20, 49 20, 84 20}}